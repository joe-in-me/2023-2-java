    /*
    *
    *                         * 접근 제어자 *
    *
    * private    -> 해당 클래스에서만.
    * default    -> 해당 클래스에서 + 동일 패키지 (완전히 같은 패키지).
    * protected  -> 해당 클래스에서 + 동일패키지 + 상속가능.
    * public     -> 해당 클래스에서 + 동일패키지 + 상속가능 + 모든곳에서 사용 가능.
    *
    *
    * */



static 필드 의 경우도 private 사용가능
-> 이때 내부적으로 사용하는 static 필드가 됨.

-> class 에도 적용.
-> public class{} class {} 의 경우에도 default 클래스임.
-> class 에서는 public 과 default 만 사용 가능.






          * 다형성*

1. 부모타입은 자식객체 주소값 담을 수 있다.
2. 자식타입은 부모타입 주소값 담을 수 없다.
3. 타입은 알고 있는 메소드만 호출 할 수 있고, 호출이 된다면 객체 기준이다.




            * new Tip*
생성자에도 return; 이 사용 가능 하다.
다만, return; 만!

